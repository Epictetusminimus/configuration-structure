syntax = "proto3";

import "fastint.proto";
import "trace.proto";

message Matches {
  message Tuple {
    uint64 value = 1;
    uint64 mask = 2;
  }

  message Triple {
    uint64 low = 1;
    uint64 high = 2;
    uint64 mask = 3;
  }

  oneof foo_oneof {
    Tuple tuple = 1;
    Triple triple = 2;
  }
}

message FlexibleRange {
  repeated uint64 single = 1;
  // zip start, end to get a list of ranges
  repeated uint64 start = 2;
  repeated uint64 end = 3;
}

message DebugTriggerMcontrol {
  uint32 maskmax = 1;
  bool hit = 2;
  bool address_match = 3;
  bool data_match = 4;
  bool timing_before = 5;
  bool timing_after = 6;
  bool size_any = 7;
  bool size_s8 = 8;
  bool size_s16 = 9;
  bool size_s32 = 10;
  bool size_s64 = 11;
  bool size_s80 = 12;
  bool size_s96 = 13;
  bool size_s112 = 14;
  bool size_s128 = 15;
  bool action_mmode = 16;
  bool action_dmode = 17;
  bool chain = 18;
  bool match_equal = 19;
  bool match_napot = 20;
  bool match_greater_equal = 21;
  bool match_less = 22;
  bool match_low_mask = 23;
  bool match_high_mask = 24;
  bool match_not_equal = 25;
  bool match_not_napot = 26;
  bool match_not_low_mask = 27;
  bool match_not_high_mask = 28;
  bool m = 29;
  bool s = 30;
  bool u = 31;
  bool execute = 32;
  bool store = 33;
  bool load = 34;
}

message DebugTriggerMcontrolCompact {
  uint64 bitfield = 1;
}

message DebugTrigger {
  FlexibleRange index = 1;
  repeated DebugTriggerMcontrol mcontrol = 2;
  repeated DebugTriggerMcontrolCompact mcontrolCompact = 3;
}

message Debug {
  repeated DebugTrigger trigger = 1;
}

message DebugModule {
  repeated Matches abstract = 1;
  FlexibleRange connected_harts = 2;
}

enum Isa {
  RISCV32 = 0;
  RISCV64 = 1;
  RISCV128 = 2;
}

message Privileged {
  enum Mode {
    M = 0;
    S = 1;
    U = 2;
  }

  enum Satp {
    SV39 = 0;
    SV48 = 1;
    SV57 = 2;
    SV64 = 3;
  }

  repeated Mode modes = 1;
  bool epmp = 2;
  repeated Satp satps = 3;
}

message Hart {
  FlexibleRange hartid = 1;
  Debug debug = 2;
  repeated Isa isa = 3;
  Privileged privileged = 4;
  FastInt fastInt = 5;
}

message Configuration {
  repeated Hart harts = 1;
  DebugModule debug_module = 2;
  Trace trace_module = 3;
}
